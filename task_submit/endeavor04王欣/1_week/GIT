Git 的工作流程
团队：1.新建master新分支
      2.分支完成后，发出PR，即讨论修改
      3.若PR被接受，可将其合并至master
个人：1.克隆git资源作为工作副本
      2.在克隆的资源上进行修改或添加文件
      3.提交修改

Git 的分支原理
git通过可变指针实现对提交数据的历史版本的控制，即每次提交更新后，当前分支指向最后一次提交更新，且最后一次提交对象也存在一个指针指向上一次提交对象。

Git分支的合并
1.快进式：当分支指向的更新的直接上游为master
2.直接合并：即分支指向的更新的直接上游不为master，通过新建一个提交节点，连接两端（no-ff , squash)
3.冲突合并：当两个分支发生冲突时，git无法判断谁最佳，只能通过人为方式修改冲突或在某些情况下通过命令行忽略冲突
